{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Booking API",
    "description": "API для системи бронювання (користувачі та записи)",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts ( client and business)"
    },
    {
      "name": "Auth",
      "description": "Auth operations (authorization in the reservation database)"
    },
    {
      "name": "Bookings",
      "description": "Management of bookings"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-production.up.railway.app"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 5
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name",
              "description": "All contact's fields can be mentioned. Default value - _id",
              "default": "_id"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": ["client", "business"],
              "example": "business"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": ["_id", "name", "phoneNumber", "role"],
                            "properties": {
                              "_id": {
                                "description": "Contact's id",
                                "type": "string",
                                "example": "65e4decdd286b30065d54af9"
                              },
                              "name": {
                                "description": "Contact's name",
                                "type": "string",
                                "example": "John Doe"
                              },
                              "phoneNumber": {
                                "description": "Contact's name",
                                "type": "string",
                                "example": "222-33-11"
                              },
                              "email": {
                                "description": "Contact's email",
                                "type": "string",
                                "example": "John_Doe123@gmail.com"
                              },
                              "role": {
                                "description": "Contact's role",
                                "type": "string",
                                "enum": ["client", "business"]
                              }
                            }
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access token expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Contact not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "password",
                  "role"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "phoneNumber",
                    "type": "string",
                    "example": "222-33-11"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "Contact's password",
                    "type": "string",
                    "example": "John123"
                  },
                  "role": {
                    "description": "Contact's role",
                    "type": "string",
                    "enum": ["client", "business"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/paths/~1contacts/get/responses/200/content/application~1json/schema/properties/data/properties/data/items"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email already in use"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/paths/~1contacts/get/responses/200/content/application~1json/schema/properties/data/properties/data/items"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts/get/responses/404"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete contact by id"
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts/get/responses/404"
          }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Patch contact by id",
        "operationId": "patchContact",
        "description": "Patch contact by id, and update with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "phoneNumber", "email", "role"],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "phoneNumber",
                    "type": "string",
                    "example": "555-33-11"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "Lui_Doe123@gmail.com"
                  },
                  "role": {
                    "description": "Contact's role",
                    "type": "string",
                    "enum": ["client", "business"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/paths/~1contacts/get/responses/200/content/application~1json/schema/properties/data/properties/data/items"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts/get/responses/404"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register user",
        "operationId": "createUser",
        "description": "Create a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "example": "Jonni"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "example": "111223Jn"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "password",
                    "type": "string",
                    "example": "111223Jn"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": ["accessToken"],
                      "properties": {
                        "accessToken": null,
                        "type": "string",
                        "example": "mWv3Qm6b1XJof0rOJSfuZCkuA07zM0fHmWOGYcY9",
                        "refreshToken": {
                          "type": "string",
                          "example": "d9H4sXl8AqP5oC2mJZvTNlGuK03xM1rLtWOKFbY7"
                        }
                      },
                      "$ref": "#/paths/~1auth~1login/post/responses/200/content/application~1json/schema/properties/data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "409": {
            "$ref": "#/paths/~1contacts/post/responses/409"
          },
          "500": {
            "$ref": "#/paths/~1auth~1refresh/post/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login a user",
        "operationId": "loginUser",
        "description": "Login a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "example": "111223Jn"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  },
                  "password": {
                    "description": "password",
                    "type": "string",
                    "example": "111223Jn"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": ["accessToken"],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "d9H4sXl8AqP5oC2mJZvTNlGuK03xM1r"
                        },
                        "refreshToken": {
                          "type": "string",
                          "example": "d9H4sXl8AqP5oC2mJZvTNlGuK03xM1rLtWOKFbY7"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "operationId": "logouthUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "example": "Jonni_Do1@gmail.com"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "John_Doe123@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logout user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/paths/~1auth~1login/post/responses/200/content/application~1json/schema/properties/data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh token of user",
        "operationId": "refreshTokenUser",
        "description": "Refresh the user's access token using the refresh token stored in cookies.",
        "security": [],
        "responses": {
          "200": {
            "description": "Refreshed a session of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": ["accessToken"],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "mWv3Qm6b1XJof0rOJSfuZCkuA07zM0fHmWOGYcY9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "error"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "InternalServerError"
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error message for debugging purposes.",
                      "example": "Unexpected database error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bookings": {
      "post": {
        "tags": ["Bookings"],
        "summary": "Create a booking",
        "operationId": "createBooking",
        "description": "Create a booking for a business user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["businessId", "date", "time"],
                "properties": {
                  "businessId": {
                    "type": "string",
                    "description": "ID бізнес-користувача, у якого робимо бронь",
                    "example": "64adf1c2a1b23cd456ef890a"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Дата бронювання",
                    "example": "2025-09-10"
                  },
                  "time": {
                    "type": "string",
                    "description": "Час бронювання",
                    "example": "14:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "clientId",
                    "businessId",
                    "date",
                    "time",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "64adf1c2a1b23cd456ef890a"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "ID клієнта",
                      "example": "64adf1c2a1b23cd456ef1111"
                    },
                    "businessId": {
                      "type": "string",
                      "description": "ID бізнес-користувача",
                      "example": "64adf1c2a1b23cd456ef2222"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "example": "2025-09-10"
                    },
                    "time": {
                      "type": "string",
                      "example": "14:00"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["pending", "confirmed", "cancelled"],
                      "example": "pending"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "BadRequestError"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad request"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts/get/responses/404"
          }
        }
      }
    },
    "/bookings/me": {
      "get": {
        "tags": ["Bookings"],
        "summary": "Get my bookings",
        "operationId": "getMyBookings",
        "description": "Get all bookings for the authenticated client",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched bookings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1bookings/post/responses/201/content/application~1json/schema"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          }
        }
      }
    },
    "/bookings/{id}": {
      "delete": {
        "tags": ["Bookings"],
        "summary": "Delete booking",
        "operationId": "deleteBooking",
        "description": "Delete a booking by ID (only the owner can delete)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64adf1c2a1b23cd456ef890a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Booking successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts/get/responses/404"
          }
        }
      }
    },
    "/bookings/{id}/cancel": {
      "patch": {
        "tags": ["Bookings"],
        "summary": "Cancel booking",
        "operationId": "cancelBooking",
        "description": "Cancel a booking by ID (status changes to cancelled)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64adf1c2a1b23cd456ef890a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking successfully cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1bookings/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1bookings/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts/get/responses/404"
          }
        }
      }
    },
    "/bookings/{id}/update": {
      "patch": {
        "tags": ["Bookings"],
        "summary": "Update booking",
        "operationId": "updateBooking",
        "description": "Update booking details (time, contact info, number, etc.)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-09-10T14:00:00Z"
                  },
                  "contact": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+380501234567"
                  },
                  "tableNumber": {
                    "type": "integer",
                    "example": 12
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booking updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Booking updated successfully"
                    },
                    "data": {
                      "$ref": "#/paths/~1bookings/post/responses/201/content/application~1json/schema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1bookings/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts/get/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
