# security: Новий УРЛ: nodejs-production.up.railway.app
# - bearerAuth: []
# Цей блок вказує, що для доступу до операції потрібна аутентифікація за допомогою Bearer Token (bearerAuth), який був визначений у /docs/openapi.yaml
# /docs/openapi.yaml

openapi: 3.1.0
info:
  version: 1.0.0
  title: Booking API
  description: API для системи бронювання (користувачі та записи)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  # description:
  #   This is a documentation of contacts app
tags:
  - name: Contacts
    description: Operations about contacts ( client and business)
  - name: Auth
    description: Auth operations (authorization in the reservation database)
  - name: Bookings
    description: Management of bookings
security:
  - bearerAuth: []
servers:
  - url: http://localhost:3000
  - url: https://nodejs-hw-mongodb-production.up.railway.app
paths:
  #додаємо get  всих контактів
  /contacts:
    get:
      $ref: ../swagger/paths/contacts/get.yaml
    post:
      $ref: ../swagger/paths/contacts/post.yaml
  #додаємо get to id
  /contacts/{contactId}:
    get:
      $ref: ../swagger/paths/contacts/{contactId}/get.yaml
    delete:
      $ref: ../swagger/paths/contacts/{contactId}/delete.yaml
    put:
      $ref: ../swagger/paths/contacts/{contactId}/patch.yaml
  /auth/register:
    post:
      $ref: ../swagger/paths/auth/register.yaml
  /auth/login:
    post:
      $ref: ../swagger/paths/auth/login.yaml
  /auth/logout:
    post:
      $ref: ../swagger/paths/auth/logout.yaml
  /auth/refresh:
    post:
      $ref: ../swagger/paths/auth/refresh.yaml
  /bookings:
    post:
      $ref: ../swagger/paths/bookings/register.yaml
  /bookings/me:
    get:
      $ref: ../swagger/paths/bookings/me/get.yaml
  /bookings/{id}:
    delete:
      $ref: ../swagger/paths/bookings/{id}/delete.yaml
  /bookings/{id}/cancel:
    patch:
      $ref: ../swagger/paths/bookings/{id}/patch.yaml
  /bookings/{id}/update:
    patch:
      $ref: ../swagger/paths/bookings/{id}/update.yaml
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
